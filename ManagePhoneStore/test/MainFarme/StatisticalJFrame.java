/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainFarme;

import DAO.InformationCustomerDAO;
import DAO.OrderDAO;
import DAO.StatisticalDAO;
import Entity.InformationCustomer;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import Libraries.Dialog;
import Libraries.XDate;
import Libraries.XMoney;
import java.util.Date;

/**
 *
 * @author nongn
 */
public class StatisticalJFrame extends javax.swing.JDialog {

    /**
     * Creates new form StatisticalJFrame
     */
    public StatisticalJFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }
    
    void init() {
        this.setLocationRelativeTo(null);
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnStatistical = new javax.swing.JPanel();
        tab = new javax.swing.JTabbedPane();
        debt = new javax.swing.JPanel();
        sroll2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        lblChooseDateFromDebt = new javax.swing.JLabel();
        ChooseDateFromDebt = new com.toedter.calendar.JDateChooser();
        lblChooseDateToDebt = new javax.swing.JLabel();
        ChooseDateToDebt = new com.toedter.calendar.JDateChooser();
        btnSearchDebt = new javax.swing.JButton();
        total = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablTotal = new javax.swing.JTable();
        lblchosdatefromTNOP = new javax.swing.JLabel();
        DateChooserFromTNOP = new com.toedter.calendar.JDateChooser();
        lblchosdatetoTNOP = new javax.swing.JLabel();
        DateChooserToTNOP = new com.toedter.calendar.JDateChooser();
        btnSearchTNOP = new javax.swing.JButton();
        turnover = new javax.swing.JPanel();
        lbchosdatefrom = new javax.swing.JLabel();
        srolll1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DateChooserFrom = new com.toedter.calendar.JDateChooser();
        lbchosdateto = new javax.swing.JLabel();
        DateChooserTo = new com.toedter.calendar.JDateChooser();
        btnSearchTurnover = new javax.swing.JButton();
        tieude = new javax.swing.JLabel();

        pnStatistical.setBackground(new java.awt.Color(204, 255, 204));

        tab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        debt.setBackground(new java.awt.Color(51, 255, 204));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CodeOrder", "Total Phone of type", "Total phone number", "Total value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sroll2.setViewportView(jTable2);

        lblChooseDateFromDebt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblChooseDateFromDebt.setText("Choose date from:");

        ChooseDateFromDebt.setDateFormatString("dd/MM/yyyy");

        lblChooseDateToDebt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblChooseDateToDebt.setText("Choose date to:");

        ChooseDateToDebt.setDateFormatString("dd/MM/yyyy");

        btnSearchDebt.setText("Search");
        btnSearchDebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDebtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout debtLayout = new javax.swing.GroupLayout(debt);
        debt.setLayout(debtLayout);
        debtLayout.setHorizontalGroup(
            debtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debtLayout.createSequentialGroup()
                .addGroup(debtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(debtLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(sroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(debtLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblChooseDateFromDebt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(ChooseDateFromDebt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(lblChooseDateToDebt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(ChooseDateToDebt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(btnSearchDebt)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        debtLayout.setVerticalGroup(
            debtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debtLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(debtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChooseDateFromDebt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChooseDateFromDebt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChooseDateToDebt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSearchDebt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChooseDateToDebt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(sroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        tab.addTab("Debt", debt);

        total.setBackground(new java.awt.Color(255, 204, 204));

        tablTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CodePhone", "NamePhone", "Total phone number", "Unit price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablTotalMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablTotal);

        lblchosdatefromTNOP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblchosdatefromTNOP.setText("Choose date from:");

        DateChooserFromTNOP.setDateFormatString("dd/MM/yyyy");

        lblchosdatetoTNOP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblchosdatetoTNOP.setText("Choose date to:");

        DateChooserToTNOP.setDateFormatString("dd/MM/yyyy");

        btnSearchTNOP.setText("Search");
        btnSearchTNOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTNOPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout totalLayout = new javax.swing.GroupLayout(total);
        total.setLayout(totalLayout);
        totalLayout.setHorizontalGroup(
            totalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(totalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(totalLayout.createSequentialGroup()
                        .addComponent(lblchosdatefromTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateChooserFromTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(lblchosdatetoTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateChooserToTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnSearchTNOP))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        totalLayout.setVerticalGroup(
            totalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(totalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblchosdatefromTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateChooserFromTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblchosdatetoTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateChooserToTNOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchTNOP))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tab.addTab("Total number of phones", total);

        turnover.setBackground(new java.awt.Color(255, 255, 153));

        lbchosdatefrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbchosdatefrom.setText("Choose date from:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Code Customer", "Name Customer", "Number of invoices", "Total phone number", "Total value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        srolll1.setViewportView(jTable1);

        DateChooserFrom.setDateFormatString("dd/MM/yyyy");

        lbchosdateto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbchosdateto.setText("Choose date to:");

        DateChooserTo.setDateFormatString("dd/MM/yyyy");

        btnSearchTurnover.setText("Search");
        btnSearchTurnover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTurnoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout turnoverLayout = new javax.swing.GroupLayout(turnover);
        turnover.setLayout(turnoverLayout);
        turnoverLayout.setHorizontalGroup(
            turnoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(turnoverLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(srolll1, javax.swing.GroupLayout.DEFAULT_SIZE, 1029, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(turnoverLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(lbchosdatefrom, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(lbchosdateto, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnSearchTurnover)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        turnoverLayout.setVerticalGroup(
            turnoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(turnoverLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(turnoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbchosdatefrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbchosdateto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchTurnover))
                .addGap(26, 26, 26)
                .addComponent(srolll1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        tab.addTab("Turnover", turnover);

        tieude.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tieude.setText("STATISTICAL");

        javax.swing.GroupLayout pnStatisticalLayout = new javax.swing.GroupLayout(pnStatistical);
        pnStatistical.setLayout(pnStatisticalLayout);
        pnStatisticalLayout.setHorizontalGroup(
            pnStatisticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnStatisticalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tieude, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnStatisticalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab)
                .addGap(99, 99, 99))
        );
        pnStatisticalLayout.setVerticalGroup(
            pnStatisticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnStatisticalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tieude, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tab)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnStatistical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnStatistical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchTurnoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTurnoverActionPerformed
        fillTableTurnover();
    }//GEN-LAST:event_btnSearchTurnoverActionPerformed

    private void tablTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablTotalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablTotalMouseClicked

    private void btnSearchTNOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTNOPActionPerformed
        fillTableTNOP();
    }//GEN-LAST:event_btnSearchTNOPActionPerformed

    private void btnSearchDebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDebtActionPerformed
        filltableDebt();
    }//GEN-LAST:event_btnSearchDebtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatisticalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatisticalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatisticalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatisticalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StatisticalJFrame dialog = new StatisticalJFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser ChooseDateFromDebt;
    private com.toedter.calendar.JDateChooser ChooseDateToDebt;
    private com.toedter.calendar.JDateChooser DateChooserFrom;
    private com.toedter.calendar.JDateChooser DateChooserFromTNOP;
    private com.toedter.calendar.JDateChooser DateChooserTo;
    private com.toedter.calendar.JDateChooser DateChooserToTNOP;
    private javax.swing.JButton btnSearchDebt;
    private javax.swing.JButton btnSearchTNOP;
    private javax.swing.JButton btnSearchTurnover;
    private javax.swing.JPanel debt;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbchosdatefrom;
    private javax.swing.JLabel lbchosdateto;
    private javax.swing.JLabel lblChooseDateFromDebt;
    private javax.swing.JLabel lblChooseDateToDebt;
    private javax.swing.JLabel lblchosdatefromTNOP;
    private javax.swing.JLabel lblchosdatetoTNOP;
    private javax.swing.JPanel pnStatistical;
    private javax.swing.JScrollPane sroll2;
    private javax.swing.JScrollPane srolll1;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tablTotal;
    private javax.swing.JLabel tieude;
    private javax.swing.JPanel total;
    private javax.swing.JPanel turnover;
    // End of variables declaration//GEN-END:variables

    void setLayoutUI(){
        
    }
    OrderDAO dao = new OrderDAO();
    StatisticalDAO sdao = new StatisticalDAO();
    InformationCustomerDAO cusdao = new InformationCustomerDAO();
    
   
    
    void fillTableTurnover() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            Date dateform = DateChooserFrom.getDate();
             Date dateto = DateChooserTo.getDate();
             XDate.toString(dateform, "yyyy-mm-dd");
             XDate.toString(dateto, "yyyy-mm-dd");
             List<Object[]> list = sdao.getsl(dateform,dateto);
            for (Object[] row : list) {
            double money = Double.parseDouble(String.valueOf(row[3]));
            Object[] rowNew = {row[0], cusdao.SelectID(String.valueOf(row[0])).getNameCustomer(), row[1], row[2], XMoney.toString(money, "VN")};
            model.addRow(rowNew);   
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        
       
    }
    
    void filltableDebt() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        try {
             Date dateform = ChooseDateFromDebt.getDate();
             Date dateto = ChooseDateToDebt.getDate();
             XDate.toString(dateform, "yyyy-mm-dd");
             XDate.toString(dateto, "yyyy-mm-dd");
            List<Object[]> list = sdao.getDebt(dateform,dateto);
            for (Object[] row : list) {
                double money = Double.parseDouble(String.valueOf(row[3]));
                Object[] rowNew = {row[0], row[1], row[2], XMoney.toString(money, "VN")};
                model.addRow(rowNew);
            }
        } catch (Exception e) {
        }
    }
    void fillTableTNOP() {

        DefaultTableModel model = (DefaultTableModel) tablTotal.getModel();
        model.setRowCount(0);
        try {
               Date dateform = DateChooserFromTNOP.getDate();
             Date dateto = DateChooserToTNOP.getDate();
             XDate.toString(dateform, "yyyy-mm-dd");
             XDate.toString(dateto, "yyyy-mm-dd");
            List<Object[]> list = sdao.getTotalnumberofphones(dateform, dateto);
            for (Object[] row : list) {
                double money = Double.parseDouble(String.valueOf(row[3]));
                Object[] rows = {row[0], row[1], row[2], XMoney.toString(money, "VN")};
                model.addRow(rows);
            }
        } catch (Exception e) {
        }
    }

    void setTab(int i) {
        tab.setSelectedIndex(i);
    }
}
